framework:
    secret: '%env(APP_SECRET)%'
    #csrf_protection: true
    #http_method_override: true

    # Enables session support. Note that the session will ONLY be started if you read or write from it.
    # Remove or comment this section to explicitly disable session support.
    session:
        #handler_id: ~
        cookie_secure: auto
        cookie_samesite: lax
        name: SULUSESSID

        # redis
        handler_id: session.handler.redis
        cookie_lifetime: 31536000
        gc_maxlifetime: 31536000
#        name: SULUSESSID # This avoids conflicts with other applications running on the same domain

    #esi: true
    #fragments: true
    php_errors:
        log: true

services:

    app.cache.provider.redis:
        # you can also use \RedisArray, \RedisCluster or \Predis\Client classes
        class: Redis
        calls:
            - connect:
                  - '%env(REDIS_HOST)%'
                  - '%env(int:REDIS_PORT)%'

    session.handler.redis:
        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler
        arguments: ['@app.cache.provider.redis', { prefix: 'app_namespace' }]
